<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1468.vcf4f5ee92395">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3996.va_f5c1799f978">
    <script>pipeline {
    agent any  // This assumes the Jenkins agent can run shell commands

    environment {
        DOCKER_IMAGE = &apos;nginx&apos;
        CONTAINER_NAME = &apos;nginx-container&apos;
    }

    stages {
        stage(&apos;Pull Docker Image&apos;) {
            steps {
                script {
                    // Pull the Nginx image from Docker Hub
                    sh &apos;docker pull ${DOCKER_IMAGE}&apos;
                }
            }
        }

        stage(&apos;Run Docker Container&apos;) {
            steps {
                script {
                    // Run the Nginx container
                    sh &apos;docker run -d --name ${CONTAINER_NAME} -p 8080:80 ${DOCKER_IMAGE}&apos;
                }
            }
        }

        stage(&apos;Check Container Logs&apos;) {
            steps {
                script {
                    // Check the logs of the running container
                    sh &apos;docker logs ${CONTAINER_NAME}&apos;
                }
            }
        }
    }

    post {
        always {
            echo &apos;Pipeline finished.&apos;
        }
        success {
            echo &apos;Deployment succeeded.&apos;
        }
        failure {
            echo &apos;Deployment failed.&apos;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>